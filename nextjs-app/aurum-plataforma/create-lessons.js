const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function createLessons() {
  try {
    console.log('üîç Verificando curso existente...');
    
    // Buscar curso existente
    const course = await prisma.course.findFirst({
      where: { title: 'EDUCA√á√ÉO FINANCEIRA B√ÅSICA' }
    });
    
    if (!course) {
      console.log('‚ùå Curso n√£o encontrado. Execute o seed primeiro.');
      return;
    }
    
    console.log('‚úÖ Curso encontrado:', course.title);
    console.log('üéØ ID do curso:', course.id);
    
    // Buscar m√≥dulos do curso
    const modules = await prisma.module.findMany({
      where: { courseId: course.id },
      include: { lessons: true },
      orderBy: { order: 'asc' }
    });
    
    console.log(`üìö Encontrados ${modules.length} m√≥dulos:`);
    modules.forEach(module => {
      console.log(`  - ${module.title} (${module.lessons.length} aulas)`);
    });
    
    // Se n√£o h√° aulas, criar
    if (modules.length === 0 || modules.every(m => m.lessons.length === 0)) {
      console.log('üèóÔ∏è Criando m√≥dulo e aulas...');
      
      // Criar m√≥dulo se n√£o existir
      let module1 = modules.find(m => m.title.includes('Mentalidade'));
      if (!module1) {
        module1 = await prisma.module.create({
          data: {
            title: 'M√≥dulo 1 - Mentalidade Financeira',
            description: 'Fundamentos da mentalidade financeira',
            order: 0,
            courseId: course.id,
          }
        });
        console.log('‚úÖ M√≥dulo criado:', module1.title);
      }
      
      // Criar aulas
      const lessons = [
        'AULA 01 LIMPAR O TERRENO',
        'AULA 02 MENTALIDADE DE ABUND√ÇNCIA X MENTALIDADE DE ESCASSEZ',
        'AULA 03 CREN√áAS LIMITANTES SOBRE VOC√ä',
        'AULA 04 CREN√áAS LIMITANTES EM RELA√á√ÉO AO DINHEIRO',
        'AULA 05 O PODER DO AMBIENTE E DAS PESSOAS AO REDOR'
      ];
      
      for (let i = 0; i < lessons.length; i++) {
        const existingLesson = await prisma.lesson.findFirst({
          where: {
            title: lessons[i],
            moduleId: module1.id
          }
        });
        
        if (!existingLesson) {
          await prisma.lesson.create({
            data: {
              title: lessons[i],
              description: `Descri√ß√£o da ${lessons[i]}`,
              vimeoVideoId: '1120965691',
              order: i,
              moduleId: module1.id,
              courseId: course.id,
              tasks: [],
            }
          });
          console.log(`‚úÖ Aula criada: ${lessons[i]}`);
        } else {
          console.log(`‚è≠Ô∏è Aula j√° existe: ${lessons[i]}`);
        }
      }
      
      console.log('üéâ Aulas criadas com sucesso!');
    } else {
      console.log('‚úÖ Aulas j√° existem no banco de dados');
    }
    
    // Verificar resultado final
    const finalModules = await prisma.module.findMany({
      where: { courseId: course.id },
      include: { lessons: true },
      orderBy: { order: 'asc' }
    });
    
    console.log('\nüìä Status final:');
    finalModules.forEach(module => {
      console.log(`  - ${module.title}: ${module.lessons.length} aulas`);
      module.lessons.forEach(lesson => {
        console.log(`    ‚Ä¢ ${lesson.title} (ID: ${lesson.vimeoVideoId})`);
      });
    });
    
  } catch (error) {
    console.error('‚ùå Erro:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createLessons();
